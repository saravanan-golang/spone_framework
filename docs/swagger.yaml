definitions:
  types.Column:
    properties:
      exp:
        description: expressions, which default to = when the value is null, have
          =, !=, >, >=, <, <=, like
        type: string
      logic:
        description: logical type, defaults to and when value is null, only &(and),
          ||(or)
        type: string
      name:
        description: column name
        type: string
      value:
        description: column value
    type: object
  types.Conditions:
    properties:
      columns:
        description: columns info
        items:
          $ref: '#/definitions/types.Column'
        type: array
    type: object
  types.CreateUsersReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateUsersRequest:
    properties:
      age:
        type: integer
      email:
        type: string
      mobileNumber:
        type: string
      name:
        type: string
    type: object
  types.DeleteUsersByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUserssByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUserssByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.GetUsersByConditionReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          users:
            $ref: '#/definitions/types.UsersObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUsersByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          users:
            $ref: '#/definitions/types.UsersObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUserssByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userss:
            items:
              $ref: '#/definitions/types.UsersObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUserssByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.ListUserssReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userss:
            items:
              $ref: '#/definitions/types.UsersObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.Params:
    properties:
      columns:
        description: query conditions
        items:
          $ref: '#/definitions/types.Column'
        type: array
      limit:
        description: lines per page
        type: integer
      page:
        description: page number, starting from page 0
        type: integer
      sort:
        description: sorted fields, multi-column sorting separated by commas
        type: string
    type: object
  types.UpdateUsersByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateUsersByIDRequest:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        description: uint64 id
        type: integer
      mobileNumber:
        type: string
      name:
        type: string
    type: object
  types.UsersObjDetail:
    properties:
      age:
        type: integer
      createdAt:
        type: string
      email:
        type: string
      id:
        description: convert to uint64 id
        type: integer
      mobileNumber:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: http server api docs
  title: user_service api docs
  version: "2.0"
paths:
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: submit information to create users
      parameters:
      - description: users information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateUsersReply'
      security:
      - BearerAuth: []
      summary: create users
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: delete users by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUsersByIDReply'
      security:
      - BearerAuth: []
      summary: delete users
      tags:
      - users
    get:
      consumes:
      - application/json
      description: get users detail by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUsersByIDReply'
      security:
      - BearerAuth: []
      summary: get users detail
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update users information by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: users information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUsersByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateUsersByIDReply'
      security:
      - BearerAuth: []
      summary: update users
      tags:
      - users
  /api/v1/users/condition:
    post:
      consumes:
      - application/json
      description: get users by condition
      parameters:
      - description: query condition
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Conditions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUsersByConditionReply'
      security:
      - BearerAuth: []
      summary: get users by condition
      tags:
      - users
  /api/v1/users/delete/ids:
    post:
      consumes:
      - application/json
      description: delete userss by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.DeleteUserssByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUserssByIDsReply'
      security:
      - BearerAuth: []
      summary: delete userss
      tags:
      - users
  /api/v1/users/list:
    get:
      consumes:
      - application/json
      description: list of userss by last id and limit
      parameters:
      - default: 0
        description: last id, default is MaxInt32
        in: query
        name: lastID
        required: true
        type: integer
      - default: 10
        description: number per page
        in: query
        name: limit
        type: integer
      - default: -id
        description: 'sort by column name of table, and the '
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserssReply'
      security:
      - BearerAuth: []
      summary: list of userss by last id and limit
      tags:
      - users
    post:
      consumes:
      - application/json
      description: list of userss by paging and conditions
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserssReply'
      security:
      - BearerAuth: []
      summary: list of userss by query parameters
      tags:
      - users
  /api/v1/users/list/ids:
    post:
      consumes:
      - application/json
      description: list of userss by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.ListUserssByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserssByIDsReply'
      security:
      - BearerAuth: []
      summary: list of userss by batch id
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type Bearer your-jwt-token to Value
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
