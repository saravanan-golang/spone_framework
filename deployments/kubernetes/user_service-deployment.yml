apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-dm
  namespace: user-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      name: user-service-pod
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: /user-application/user-service:latest
          # If using a local image, use Never, default is Always
          #imagePullPolicy: Never
          command: ["./user_service", "-c", "/app/configs/user_service.yml"]
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          volumeMounts:
            - name: user-service-vl
              mountPath: /app/configs/
              readOnly: true

          ports:
            - name: http-port
              containerPort: 8080
          readinessProbe:
            httpGet:
              port: http-port
              path: /health
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: http-port
              path: /health

            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      # todo for private repositories, you need to create a secret (here docker-auth-secret) to store the account and password to log into docker
      imagePullSecrets:
        - name: docker-auth-secret
      volumes:
        - name: user-service-vl
          configMap:
            name: user-service-config
